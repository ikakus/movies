apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdk

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdk
        targetSdkVersion rootProject.ext.android.targetSdk

        versionCode rootProject.ext.application.versionCode
        versionName rootProject.ext.application.versionName
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'defaultQuery', "\"warrior\""
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

// FAQ: It's for @Parcelize annotation and LayoutContainer interface.
androidExtensions {
    experimental = true
}

dependencies {
    implementation project(':core')
    implementation project(':domain')
    implementation project(':data')

    implementation rootProject.ext.dependencies.constraintlayout
    implementation rootProject.ext.dependencies.koin
    implementation rootProject.ext.dependencies.koinAndroid
    implementation rootProject.ext.dependencies.koinScope
    implementation rootProject.ext.dependencies.lifecycleCommonJava8
    implementation rootProject.ext.dependencies.kotlinStdlib
    implementation rootProject.ext.dependencies.material
    implementation rootProject.ext.dependencies.mvicore
    implementation rootProject.ext.dependencies.mvicoreAndroid
    implementation rootProject.ext.dependencies.picasso
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.rxAndroid
    implementation rootProject.ext.dependencies.rxbindingAppcompatV7Kotlin
    implementation rootProject.ext.dependencies.rxJava
    implementation rootProject.ext.dependencies.rxKotlin
    implementation rootProject.ext.dependencies.rxRelay
}
